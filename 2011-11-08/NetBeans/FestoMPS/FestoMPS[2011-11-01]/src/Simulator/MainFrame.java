
package Simulator;

import FestoMPS.*;
import FestoMPS3D.*;
import Tools.PatternFormatter;

import java.util.ResourceBundle;
import javax.swing.DefaultListModel;
import javax.swing.JColorChooser;
import java.awt.Color;
import java.util.regex.Pattern;
import javax.swing.JFormattedTextField.AbstractFormatterFactory;
import javax.swing.text.DefaultFormatterFactory;

public class MainFrame extends javax.swing.JFrame {
    
    protected int workpiecesValue = -1;
    protected GuiBinder guiBinder = null;
    protected DistributionStation dS = null;
    DefaultListModel model = null;
    public static TopBehavior[][] behaviors = new TopBehavior[4][4];
    private static final ResourceBundle greek = ResourceBundle.getBundle("Simulator/Greek");
    
    /** Creates new form MainForm */
    public MainFrame() {
        
        initComponents();
        model = new DefaultListModel();
        model.addElement( "Connections" );
        model.addElement( "Appearance" );
        preferencesList.setModel( model );
        setUpPortFields();
        setUpIPFields();
                
                /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
  
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        aboutF = new javax.swing.JDialog();
        aboutLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        preferencesFrame = new javax.swing.JFrame();
        preferencesFrameSave = new javax.swing.JButton();
        preferencesFrameCancel = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        connectionsP = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        sensorsIPField_dS = new javax.swing.JFormattedTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sensorsIPLabel_dS = new javax.swing.JLabel();
        sensorsPortLabel_dS = new javax.swing.JLabel();
        actuatorsPortLabel_dS = new javax.swing.JLabel();
        communicationPortLabel_dS = new javax.swing.JLabel();
        sensorsPortLabel_tS = new javax.swing.JLabel();
        sensorsIPLabel_tS = new javax.swing.JLabel();
        sensorsIPField_tS = new javax.swing.JFormattedTextField();
        communicationPortLabel_tS = new javax.swing.JLabel();
        actuatorsPortLabel_tS = new javax.swing.JLabel();
        sensorsPortLabel_pS = new javax.swing.JLabel();
        sensorsIPLabel_pS = new javax.swing.JLabel();
        sensorsIPField_pS = new javax.swing.JFormattedTextField();
        communicationPortLabel_pS = new javax.swing.JLabel();
        actuatorsPortLabel_pS = new javax.swing.JLabel();
        sensorsPortLabel_wS = new javax.swing.JLabel();
        sensorsIPLabel_wS = new javax.swing.JLabel();
        sensorsIPField_wS = new javax.swing.JFormattedTextField();
        communicationPortLabel_wS = new javax.swing.JLabel();
        actuatorsPortLabel_wS = new javax.swing.JLabel();
        sensorsPortField_wS = new javax.swing.JFormattedTextField();
        sensorsPortField_pS = new javax.swing.JFormattedTextField();
        sensorsPortField_tS = new javax.swing.JFormattedTextField();
        sensorsPortField_dS = new javax.swing.JFormattedTextField();
        actuatorsPortField_dS = new javax.swing.JFormattedTextField();
        communicationPortField_dS = new javax.swing.JFormattedTextField();
        actuatorsPortField_tS = new javax.swing.JFormattedTextField();
        communicationPortField_tS = new javax.swing.JFormattedTextField();
        actuatorsPortField_pS = new javax.swing.JFormattedTextField();
        communicationPortField_pS = new javax.swing.JFormattedTextField();
        actuatorsPortField_wS = new javax.swing.JFormattedTextField();
        communicationPortField_wS = new javax.swing.JFormattedTextField();
        appearanceP = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        actuatrosColorLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        actuatorsColorButton = new javax.swing.JButton();
        sensorsColorButton = new javax.swing.JButton();
        bodyColorButton = new javax.swing.JButton();
        structureColorButton = new javax.swing.JButton();
        infoBarPreferences = new javax.swing.JTextField();
        preferencesList = new javax.swing.JList();
        executionP = new javax.swing.JPanel();
        wSCtrlP = new javax.swing.JPanel();
        powerOn_wS = new javax.swing.JButton();
        startStopLed_wS = new javax.swing.JRadioButton();
        removeRejectedWorkpiece_wS = new javax.swing.JButton();
        removeColoredWorkpiece_wS = new javax.swing.JButton();
        removeBlackWorkpiece_wS = new javax.swing.JButton();
        pSCtrlP = new javax.swing.JPanel();
        powerOn_pS = new javax.swing.JButton();
        startStopLed_pS = new javax.swing.JRadioButton();
        tSCtrlP = new javax.swing.JPanel();
        powerOn_tS = new javax.swing.JButton();
        startStopLed_tS = new javax.swing.JRadioButton();
        removeRejectedWorkpiece_tS = new javax.swing.JButton();
        dSCtrlP = new javax.swing.JPanel();
        powerOn_dS = new javax.swing.JButton();
        startStopLed_dS = new javax.swing.JRadioButton();
        addRejectedWorkpiece_dS = new javax.swing.JButton();
        addAcceptedWorkpiece_dS = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dSInfo = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tSInfo = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        pSInfo = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        wSInfo = new javax.swing.JTextArea();
        propertiesP = new javax.swing.JPanel();
        simulatorsCtrlP = new javax.swing.JPanel();
        powerOn_System = new javax.swing.JButton();
        topBar = new javax.swing.JMenuBar();
        topMenuFile = new javax.swing.JMenu();
        topMenuFileClose = new javax.swing.JMenuItem();
        topMenuEdit = new javax.swing.JMenu();
        topMenuEditPreferences = new javax.swing.JMenuItem();
        topMenuHelp = new javax.swing.JMenu();
        topMenuHelpHelp = new javax.swing.JMenuItem();
        topMenuHelpAbout = new javax.swing.JMenuItem();

        aboutF.setTitle(greek.getString("ABOUTF")); // NOI18N
        aboutF.setAlwaysOnTop(true);
        aboutF.setBounds(new java.awt.Rectangle(500, 400, 400, 250));
        aboutF.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        aboutF.setFocusable(false);
        aboutF.setMinimumSize(new java.awt.Dimension(400, 250));
        aboutF.setName("aboutF"); // NOI18N
        aboutF.setResizable(false);

        aboutLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/120px-Upatras.jpg"))); // NOI18N

        jTextPane1.setBackground(new java.awt.Color(240, 240, 240));
        jTextPane1.setBorder(null);
        jTextPane1.setEditable(false);
        jTextPane1.setText("Η εφαρμογή αυτή προσομοιώνει μία βιομηχανική διεργασία και αναπτύχθηκε ως περίπτωση χρήσης για την ανάπτυξη ενσωματωμένων συστημάτων και συστημάτων ελέγχου.");
        jTextPane1.setFocusable(false);
        jTextPane1.setHighlighter(null);
        jScrollPane5.setViewportView(jTextPane1);

        jTextPane2.setBackground(new java.awt.Color(240, 240, 240));
        jTextPane2.setBorder(null);
        jTextPane2.setEditable(false);
        jTextPane2.setText("Η εφαρμογή αναπτύχθηκε από τον Δημήτριο Ανδρέα Καφετζή κατά την εκπόνηση της διπλωματικής του εργασίας. Παραχαρώρειται χωρίς καμία εγγύηση καλής λειτουργίας μαζί με τον κώδικά της για περαιτέρω βελτίωση και τροποποιήσεις ανάλογα με τη χρήση.");
        jTextPane2.setFocusable(false);
        jTextPane2.setHighlighter(null);
        jScrollPane6.setViewportView(jTextPane2);

        javax.swing.GroupLayout aboutFLayout = new javax.swing.GroupLayout(aboutF.getContentPane());
        aboutF.getContentPane().setLayout(aboutFLayout);
        aboutFLayout.setHorizontalGroup(
            aboutFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutFLayout.createSequentialGroup()
                .addGroup(aboutFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutFLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(aboutLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(aboutFLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)))
                .addContainerGap())
        );
        aboutFLayout.setVerticalGroup(
            aboutFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutFLayout.createSequentialGroup()
                .addGroup(aboutFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutFLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(aboutLabel))
                    .addGroup(aboutFLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Simulator/Greek"); // NOI18N
        preferencesFrame.setTitle(bundle.getString("PREFERENCES")); // NOI18N
        preferencesFrame.setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        preferencesFrame.setLocationByPlatform(true);
        preferencesFrame.setMinimumSize(new java.awt.Dimension(780, 500));
        preferencesFrame.setName("preferencesFrame"); // NOI18N
        preferencesFrame.setResizable(false);
        preferencesFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                preferencesFrameWindowClosing(evt);
            }
        });

        preferencesFrameSave.setText(bundle.getString("SAVE")); // NOI18N
        preferencesFrameSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                preferencesFrameSaveMouseReleased(evt);
            }
        });

        preferencesFrameCancel.setText(bundle.getString("CANCEL")); // NOI18N
        preferencesFrameCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                preferencesFrameCancelMouseReleased(evt);
            }
        });

        connectionsP.setBorder(javax.swing.BorderFactory.createTitledBorder("Connections Preferences"));

        jSeparator1.setName(""); // NOI18N

        try {
            sensorsIPField_dS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Distribution Station");

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Testing Station");

        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Processing Station");

        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Warehousing Station");

        sensorsIPLabel_dS.setText("Sensors server's IP");

        sensorsPortLabel_dS.setText("Sensors server's port");

        actuatorsPortLabel_dS.setText("Actuators server's port");

        communicationPortLabel_dS.setText("Communication server's port");

        sensorsPortLabel_tS.setText("Sensors server's port");

        sensorsIPLabel_tS.setText("Sensors server's IP");

        try {
            sensorsIPField_tS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        communicationPortLabel_tS.setText("Communication server's port");

        actuatorsPortLabel_tS.setText("Actuators server's port");

        sensorsPortLabel_pS.setText("Sensors server's port");

        sensorsIPLabel_pS.setText("Sensors server's IP");

        try {
            sensorsIPField_pS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        communicationPortLabel_pS.setText("Communication server's port");

        actuatorsPortLabel_pS.setText("Actuators server's port");

        sensorsPortLabel_wS.setText("Sensors server's port");

        sensorsIPLabel_wS.setText("Sensors server's IP");

        try {
            sensorsIPField_wS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        communicationPortLabel_wS.setText("Communication server's port");

        actuatorsPortLabel_wS.setText("Actuators server's port");

        try {
            sensorsPortField_wS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            sensorsPortField_pS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            sensorsPortField_tS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            sensorsPortField_dS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            actuatorsPortField_dS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            communicationPortField_dS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            actuatorsPortField_tS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            communicationPortField_tS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            actuatorsPortField_pS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            communicationPortField_pS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            actuatorsPortField_wS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            communicationPortField_wS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout connectionsPLayout = new javax.swing.GroupLayout(connectionsP);
        connectionsP.setLayout(connectionsPLayout);
        connectionsPLayout.setHorizontalGroup(
            connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connectionsPLayout.createSequentialGroup()
                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addGroup(connectionsPLayout.createSequentialGroup()
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(connectionsPLayout.createSequentialGroup()
                                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(connectionsPLayout.createSequentialGroup()
                                            .addGap(322, 322, 322)
                                            .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(actuatorsPortLabel_dS)
                                                .addComponent(communicationPortLabel_dS))
                                            .addGap(33, 33, 33))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectionsPLayout.createSequentialGroup()
                                            .addContainerGap(319, Short.MAX_VALUE)
                                            .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(communicationPortLabel_tS)
                                                .addComponent(actuatorsPortLabel_tS))
                                            .addGap(36, 36, 36))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectionsPLayout.createSequentialGroup()
                                            .addContainerGap(319, Short.MAX_VALUE)
                                            .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(communicationPortLabel_pS)
                                                .addComponent(actuatorsPortLabel_pS))
                                            .addGap(36, 36, 36))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectionsPLayout.createSequentialGroup()
                                            .addContainerGap(319, Short.MAX_VALUE)
                                            .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(communicationPortLabel_wS)
                                                .addComponent(actuatorsPortLabel_wS))
                                            .addGap(36, 36, 36)))
                                    .addGroup(connectionsPLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(connectionsPLayout.createSequentialGroup()
                                                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sensorsPortLabel_wS)
                                                    .addComponent(sensorsIPLabel_wS))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sensorsPortField_wS, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(sensorsIPField_wS, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(connectionsPLayout.createSequentialGroup()
                                                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sensorsIPLabel_dS)
                                                    .addComponent(sensorsPortLabel_dS))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sensorsPortField_dS, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(sensorsIPField_dS, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(connectionsPLayout.createSequentialGroup()
                                                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sensorsPortLabel_tS)
                                                    .addComponent(sensorsIPLabel_tS))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sensorsPortField_tS, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(sensorsIPField_tS, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(connectionsPLayout.createSequentialGroup()
                                                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sensorsPortLabel_pS)
                                                    .addComponent(sensorsIPLabel_pS))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sensorsPortField_pS, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(sensorsIPField_pS, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(communicationPortField_dS, 0, 0, Short.MAX_VALUE)
                                    .addComponent(actuatorsPortField_tS, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                    .addComponent(communicationPortField_tS, 0, 0, Short.MAX_VALUE)
                                    .addComponent(actuatorsPortField_pS, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                    .addComponent(communicationPortField_pS, 0, 0, Short.MAX_VALUE)
                                    .addComponent(actuatorsPortField_wS, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                    .addComponent(communicationPortField_wS, 0, 0, Short.MAX_VALUE)
                                    .addComponent(actuatorsPortField_dS, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, connectionsPLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jSeparator1))
                                .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)))
                        .addGap(49, 49, 49)))
                .addContainerGap())
        );
        connectionsPLayout.setVerticalGroup(
            connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connectionsPLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(connectionsPLayout.createSequentialGroup()
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sensorsIPLabel_dS)
                            .addComponent(sensorsIPField_dS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sensorsPortLabel_dS)
                            .addComponent(sensorsPortField_dS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addComponent(jLabel2))
                    .addGroup(connectionsPLayout.createSequentialGroup()
                        .addComponent(actuatorsPortLabel_dS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(communicationPortLabel_dS))
                    .addGroup(connectionsPLayout.createSequentialGroup()
                        .addComponent(actuatorsPortField_dS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(communicationPortField_dS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(connectionsPLayout.createSequentialGroup()
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sensorsIPLabel_tS)
                            .addComponent(sensorsIPField_tS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sensorsPortLabel_tS)
                            .addComponent(sensorsPortField_tS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(connectionsPLayout.createSequentialGroup()
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(actuatorsPortLabel_tS)
                            .addComponent(actuatorsPortField_tS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(communicationPortLabel_tS)
                            .addComponent(communicationPortField_tS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(connectionsPLayout.createSequentialGroup()
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sensorsIPLabel_pS)
                            .addComponent(sensorsIPField_pS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sensorsPortLabel_pS)
                            .addComponent(sensorsPortField_pS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(connectionsPLayout.createSequentialGroup()
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(actuatorsPortLabel_pS)
                            .addComponent(actuatorsPortField_pS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(communicationPortLabel_pS)
                            .addComponent(communicationPortField_pS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(connectionsPLayout.createSequentialGroup()
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sensorsIPLabel_wS)
                            .addComponent(sensorsIPField_wS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sensorsPortLabel_wS)
                            .addComponent(sensorsPortField_wS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(connectionsPLayout.createSequentialGroup()
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(actuatorsPortLabel_wS)
                            .addComponent(actuatorsPortField_wS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(connectionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(communicationPortLabel_wS)
                            .addComponent(communicationPortField_wS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        connectionsP.setBounds(0, 0, 620, 420);
        jLayeredPane1.add(connectionsP, javax.swing.JLayeredPane.DEFAULT_LAYER);

        appearanceP.setBorder(javax.swing.BorderFactory.createTitledBorder("Appearance Preferences"));
        appearanceP.setPreferredSize(new java.awt.Dimension(666, 344));

        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Colors");

        actuatrosColorLabel.setText("Actuator's color");

        jLabel6.setText("Sensor's color");

        jLabel7.setText("Body's color");

        jLabel8.setText("Structure's color");

        actuatorsColorButton.setText("choose color");
        actuatorsColorButton.setToolTipText("");
        actuatorsColorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actuatorsColorButtonMouseReleased(evt);
            }
        });

        sensorsColorButton.setText("choose color");
        sensorsColorButton.setToolTipText("");
        sensorsColorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sensorsColorButtonMouseReleased(evt);
            }
        });

        bodyColorButton.setText("choose color");
        bodyColorButton.setToolTipText("");
        bodyColorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bodyColorButtonMouseReleased(evt);
            }
        });

        structureColorButton.setText("choose color");
        structureColorButton.setToolTipText("");
        structureColorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                structureColorButtonMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout appearancePLayout = new javax.swing.GroupLayout(appearanceP);
        appearanceP.setLayout(appearancePLayout);
        appearancePLayout.setHorizontalGroup(
            appearancePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appearancePLayout.createSequentialGroup()
                .addGroup(appearancePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(appearancePLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(appearancePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actuatrosColorLabel)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(28, 28, 28)
                        .addGroup(appearancePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(structureColorButton, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(bodyColorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sensorsColorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(actuatorsColorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        appearancePLayout.setVerticalGroup(
            appearancePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appearancePLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(7, 7, 7)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(appearancePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actuatrosColorLabel)
                    .addComponent(actuatorsColorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(appearancePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(sensorsColorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(appearancePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(bodyColorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(appearancePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(structureColorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(278, Short.MAX_VALUE))
        );

        appearanceP.setBounds(0, 0, 620, 420);
        jLayeredPane1.add(appearanceP, javax.swing.JLayeredPane.DEFAULT_LAYER);

        infoBarPreferences.setBackground(new java.awt.Color(240, 240, 240));
        infoBarPreferences.setForeground(new java.awt.Color(255, 51, 51));
        infoBarPreferences.setText("Simulator needs to be restarted in order the changes to be applied");
        infoBarPreferences.setBorder(null);

        preferencesList.setBackground(new java.awt.Color(240, 240, 240));
        preferencesList.setBorder(javax.swing.BorderFactory.createTitledBorder("Preferences"));
        preferencesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        preferencesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                preferencesListValueChanged(evt);
            }
        });

        javax.swing.GroupLayout preferencesFrameLayout = new javax.swing.GroupLayout(preferencesFrame.getContentPane());
        preferencesFrame.getContentPane().setLayout(preferencesFrameLayout);
        preferencesFrameLayout.setHorizontalGroup(
            preferencesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preferencesFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(preferencesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(preferencesFrameLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(preferencesFrameLayout.createSequentialGroup()
                        .addComponent(infoBarPreferences, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(preferencesFrameSave, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(preferencesFrameCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
            .addGroup(preferencesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(preferencesFrameLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(preferencesList, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(637, Short.MAX_VALUE)))
        );
        preferencesFrameLayout.setVerticalGroup(
            preferencesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preferencesFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(preferencesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(preferencesFrameSave, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(preferencesFrameCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(infoBarPreferences, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(preferencesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(preferencesFrameLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(preferencesList, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(55, Short.MAX_VALUE)))
        );

        preferencesFrame.getAccessibleContext().setAccessibleName(bundle.getString("Preferences")); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(bundle.getString("FESTO MPS SIMULATOR")); // NOI18N
        setBounds(new java.awt.Rectangle(100, 200, 1000, 700));
        setMinimumSize(new java.awt.Dimension(1057, 740));
        setName("MainFrame"); // NOI18N

        executionP.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        executionP.setMinimumSize(new java.awt.Dimension(800, 400));
        executionP.setName("executionP"); // NOI18N
        executionP.setPreferredSize(new java.awt.Dimension(800, 400));
        executionP.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                executionPAncestorResized(evt);
            }
        });

        javax.swing.GroupLayout executionPLayout = new javax.swing.GroupLayout(executionP);
        executionP.setLayout(executionPLayout);
        executionPLayout.setHorizontalGroup(
            executionPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 827, Short.MAX_VALUE)
        );
        executionPLayout.setVerticalGroup(
            executionPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );

        wSCtrlP.setBorder(javax.swing.BorderFactory.createTitledBorder("Warehousing Station's Controls"));
        wSCtrlP.setMinimumSize(new java.awt.Dimension(200, 150));
        wSCtrlP.setPreferredSize(new java.awt.Dimension(200, 150));

        powerOn_wS.setFont(new java.awt.Font("Tahoma", 0, 10));
        powerOn_wS.setText(bundle.getString("START")); // NOI18N
        powerOn_wS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                powerOn_wSMouseClicked(evt);
            }
        });

        startStopLed_wS.setBackground(new java.awt.Color(255, 0, 0));
        startStopLed_wS.setBorderPainted(true);
        startStopLed_wS.setEnabled(false);
        startStopLed_wS.setFocusable(false);

        removeRejectedWorkpiece_wS.setFont(new java.awt.Font("Tahoma", 0, 10));
        removeRejectedWorkpiece_wS.setText(bundle.getString("REMOVE REJECTED WORKPIECE")); // NOI18N
        removeRejectedWorkpiece_wS.setToolTipText("");
        removeRejectedWorkpiece_wS.setActionCommand(greek.getString("REMOVEREJECTEDWORKPIECE_WS")); // NOI18N
        removeRejectedWorkpiece_wS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeRejectedWorkpiece_wSMouseClicked(evt);
            }
        });

        removeColoredWorkpiece_wS.setFont(new java.awt.Font("Tahoma", 0, 10));
        removeColoredWorkpiece_wS.setText(greek.getString("REMOVE COLORED WORKPIECE")); // NOI18N
        removeColoredWorkpiece_wS.setActionCommand(greek.getString("REMOVENONBLACKWORKPIECE_WS")); // NOI18N
        removeColoredWorkpiece_wS.setMaximumSize(new java.awt.Dimension(157, 21));
        removeColoredWorkpiece_wS.setMinimumSize(new java.awt.Dimension(157, 21));
        removeColoredWorkpiece_wS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeColoredWorkpiece_wSMouseClicked(evt);
            }
        });

        removeBlackWorkpiece_wS.setFont(new java.awt.Font("Tahoma", 0, 10));
        removeBlackWorkpiece_wS.setText(greek.getString("REMOVE BLACK WORKPIECE")); // NOI18N
        removeBlackWorkpiece_wS.setToolTipText("");
        removeBlackWorkpiece_wS.setActionCommand(greek.getString("REMOVEBLACKWORKPIECE_WS")); // NOI18N
        removeBlackWorkpiece_wS.setMaximumSize(new java.awt.Dimension(157, 23));
        removeBlackWorkpiece_wS.setMinimumSize(new java.awt.Dimension(157, 23));
        removeBlackWorkpiece_wS.setPreferredSize(new java.awt.Dimension(145, 23));
        removeBlackWorkpiece_wS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeBlackWorkpiece_wSMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout wSCtrlPLayout = new javax.swing.GroupLayout(wSCtrlP);
        wSCtrlP.setLayout(wSCtrlPLayout);
        wSCtrlPLayout.setHorizontalGroup(
            wSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wSCtrlPLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(powerOn_wS)
                .addGap(18, 18, 18)
                .addComponent(startStopLed_wS)
                .addContainerGap())
            .addGroup(wSCtrlPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(wSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(removeBlackWorkpiece_wS, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(removeColoredWorkpiece_wS, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(removeRejectedWorkpiece_wS, javax.swing.GroupLayout.PREFERRED_SIZE, 175, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        wSCtrlPLayout.setVerticalGroup(
            wSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wSCtrlPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(wSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(startStopLed_wS)
                    .addComponent(powerOn_wS))
                .addGap(18, 18, 18)
                .addComponent(removeBlackWorkpiece_wS, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeColoredWorkpiece_wS, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeRejectedWorkpiece_wS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        pSCtrlP.setBorder(javax.swing.BorderFactory.createTitledBorder("Processing Station's Controls"));
        pSCtrlP.setMinimumSize(new java.awt.Dimension(200, 150));
        pSCtrlP.setPreferredSize(new java.awt.Dimension(200, 150));

        powerOn_pS.setFont(new java.awt.Font("Tahoma", 0, 10));
        powerOn_pS.setText(greek.getString("START")); // NOI18N
        powerOn_pS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                powerOn_pSMouseClicked(evt);
            }
        });

        startStopLed_pS.setBackground(new java.awt.Color(255, 0, 51));
        startStopLed_pS.setEnabled(false);
        startStopLed_pS.setFocusable(false);

        javax.swing.GroupLayout pSCtrlPLayout = new javax.swing.GroupLayout(pSCtrlP);
        pSCtrlP.setLayout(pSCtrlPLayout);
        pSCtrlPLayout.setHorizontalGroup(
            pSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSCtrlPLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(powerOn_pS)
                .addGap(18, 18, 18)
                .addComponent(startStopLed_pS)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        pSCtrlPLayout.setVerticalGroup(
            pSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSCtrlPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(startStopLed_pS)
                    .addComponent(powerOn_pS))
                .addContainerGap(118, Short.MAX_VALUE))
        );

        tSCtrlP.setBorder(javax.swing.BorderFactory.createTitledBorder("Testing Station's Controls"));
        tSCtrlP.setMinimumSize(new java.awt.Dimension(200, 150));
        tSCtrlP.setPreferredSize(new java.awt.Dimension(200, 150));

        powerOn_tS.setFont(new java.awt.Font("Tahoma", 0, 10));
        powerOn_tS.setText(greek.getString("START")); // NOI18N
        powerOn_tS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                powerOn_tSMouseClicked(evt);
            }
        });

        startStopLed_tS.setBackground(new java.awt.Color(255, 0, 0));
        startStopLed_tS.setEnabled(false);
        startStopLed_tS.setFocusable(false);

        removeRejectedWorkpiece_tS.setFont(new java.awt.Font("Tahoma", 0, 10));
        removeRejectedWorkpiece_tS.setText(greek.getString("REMOVE REJECTED WORKPIECE")); // NOI18N
        removeRejectedWorkpiece_tS.setPreferredSize(new java.awt.Dimension(145, 21));
        removeRejectedWorkpiece_tS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeRejectedWorkpiece_tSMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout tSCtrlPLayout = new javax.swing.GroupLayout(tSCtrlP);
        tSCtrlP.setLayout(tSCtrlPLayout);
        tSCtrlPLayout.setHorizontalGroup(
            tSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tSCtrlPLayout.createSequentialGroup()
                .addGroup(tSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tSCtrlPLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(powerOn_tS)
                        .addGap(18, 18, 18)
                        .addComponent(startStopLed_tS))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tSCtrlPLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(removeRejectedWorkpiece_tS, javax.swing.GroupLayout.PREFERRED_SIZE, 168, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tSCtrlPLayout.setVerticalGroup(
            tSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tSCtrlPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(startStopLed_tS)
                    .addComponent(powerOn_tS))
                .addGap(78, 78, 78)
                .addComponent(removeRejectedWorkpiece_tS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        dSCtrlP.setBorder(javax.swing.BorderFactory.createTitledBorder("Distribution Station's Controls"));
        dSCtrlP.setMinimumSize(new java.awt.Dimension(200, 150));
        dSCtrlP.setPreferredSize(new java.awt.Dimension(200, 150));

        powerOn_dS.setFont(new java.awt.Font("Tahoma", 0, 10));
        powerOn_dS.setText(greek.getString("START")); // NOI18N
        powerOn_dS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                powerOn_dSMouseClicked(evt);
            }
        });

        startStopLed_dS.setBackground(new java.awt.Color(255, 0, 51));
        startStopLed_dS.setEnabled(false);
        startStopLed_dS.setFocusable(false);

        addRejectedWorkpiece_dS.setFont(new java.awt.Font("Tahoma", 0, 10));
        addRejectedWorkpiece_dS.setText(greek.getString("ADD REJECTED WORKPIECE")); // NOI18N
        addRejectedWorkpiece_dS.setActionCommand(greek.getString("ADDREJECTEDWORKPIECE_DS")); // NOI18N
        addRejectedWorkpiece_dS.setMaximumSize(new java.awt.Dimension(157, 21));
        addRejectedWorkpiece_dS.setMinimumSize(new java.awt.Dimension(157, 21));
        addRejectedWorkpiece_dS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addRejectedWorkpiece_dSMouseClicked(evt);
            }
        });

        addAcceptedWorkpiece_dS.setFont(new java.awt.Font("Tahoma", 0, 10));
        addAcceptedWorkpiece_dS.setText(greek.getString("ADD ACCEPTED WORKPIECE")); // NOI18N
        addAcceptedWorkpiece_dS.setActionCommand(greek.getString("ADDACCEPTEDWORKPIECE_DS")); // NOI18N
        addAcceptedWorkpiece_dS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAcceptedWorkpiece_dSMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout dSCtrlPLayout = new javax.swing.GroupLayout(dSCtrlP);
        dSCtrlP.setLayout(dSCtrlPLayout);
        dSCtrlPLayout.setHorizontalGroup(
            dSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dSCtrlPLayout.createSequentialGroup()
                .addGroup(dSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dSCtrlPLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(powerOn_dS)
                        .addGap(18, 18, 18)
                        .addComponent(startStopLed_dS))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dSCtrlPLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addAcceptedWorkpiece_dS, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(addRejectedWorkpiece_dS, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))))
                .addContainerGap())
        );
        dSCtrlPLayout.setVerticalGroup(
            dSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dSCtrlPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dSCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(startStopLed_dS)
                    .addComponent(powerOn_dS))
                .addGap(51, 51, 51)
                .addComponent(addAcceptedWorkpiece_dS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addRejectedWorkpiece_dS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        dSInfo.setColumns(20);
        dSInfo.setEditable(false);
        dSInfo.setFont(new java.awt.Font("Monospaced", 0, 10));
        dSInfo.setLineWrap(true);
        dSInfo.setRows(10);
        dSInfo.setWrapStyleWord(true);
        dSInfo.setMinimumSize(new java.awt.Dimension(200, 150));
        dSInfo.setPreferredSize(new java.awt.Dimension(200, 150));
        jScrollPane1.setViewportView(dSInfo);

        tSInfo.setColumns(20);
        tSInfo.setEditable(false);
        tSInfo.setFont(new java.awt.Font("Monospaced", 0, 10));
        tSInfo.setLineWrap(true);
        tSInfo.setRows(10);
        tSInfo.setMinimumSize(new java.awt.Dimension(200, 150));
        tSInfo.setPreferredSize(new java.awt.Dimension(200, 150));
        jScrollPane2.setViewportView(tSInfo);

        pSInfo.setColumns(20);
        pSInfo.setEditable(false);
        pSInfo.setFont(new java.awt.Font("Monospaced", 0, 10));
        pSInfo.setLineWrap(true);
        pSInfo.setRows(10);
        pSInfo.setMinimumSize(new java.awt.Dimension(200, 150));
        pSInfo.setPreferredSize(new java.awt.Dimension(200, 150));
        jScrollPane3.setViewportView(pSInfo);

        wSInfo.setColumns(20);
        wSInfo.setEditable(false);
        wSInfo.setFont(new java.awt.Font("Monospaced", 0, 10));
        wSInfo.setLineWrap(true);
        wSInfo.setRows(10);
        wSInfo.setMinimumSize(new java.awt.Dimension(200, 150));
        wSInfo.setPreferredSize(new java.awt.Dimension(200, 150));
        jScrollPane4.setViewportView(wSInfo);

        propertiesP.setBorder(javax.swing.BorderFactory.createTitledBorder("Properties"));
        propertiesP.setMinimumSize(new java.awt.Dimension(200, 411));
        propertiesP.setName(""); // NOI18N

        javax.swing.GroupLayout propertiesPLayout = new javax.swing.GroupLayout(propertiesP);
        propertiesP.setLayout(propertiesPLayout);
        propertiesPLayout.setHorizontalGroup(
            propertiesPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 188, Short.MAX_VALUE)
        );
        propertiesPLayout.setVerticalGroup(
            propertiesPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );

        simulatorsCtrlP.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulator's Controls"));
        simulatorsCtrlP.setMinimumSize(new java.awt.Dimension(200, 150));
        simulatorsCtrlP.setName(""); // NOI18N
        simulatorsCtrlP.setPreferredSize(new java.awt.Dimension(200, 150));

        powerOn_System.setText("Power on");

        javax.swing.GroupLayout simulatorsCtrlPLayout = new javax.swing.GroupLayout(simulatorsCtrlP);
        simulatorsCtrlP.setLayout(simulatorsCtrlPLayout);
        simulatorsCtrlPLayout.setHorizontalGroup(
            simulatorsCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(simulatorsCtrlPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(powerOn_System)
                .addContainerGap(101, Short.MAX_VALUE))
        );
        simulatorsCtrlPLayout.setVerticalGroup(
            simulatorsCtrlPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(simulatorsCtrlPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(powerOn_System)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        topMenuFile.setText(greek.getString("FILE")); // NOI18N
        topMenuFile.setName("File"); // NOI18N

        topMenuFileClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        topMenuFileClose.setText(greek.getString("CLOSE")); // NOI18N
        topMenuFileClose.setName("Close"); // NOI18N
        topMenuFileClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                topMenuFileCloseMouseReleased(evt);
            }
        });
        topMenuFile.add(topMenuFileClose);
        topMenuFileClose.getAccessibleContext().setAccessibleDescription("");

        topBar.add(topMenuFile);

        topMenuEdit.setText(greek.getString("EDIT")); // NOI18N

        topMenuEditPreferences.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        topMenuEditPreferences.setText(greek.getString("PREFERENCES")); // NOI18N
        topMenuEditPreferences.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                topMenuEditPreferencesMouseReleased(evt);
            }
        });
        topMenuEdit.add(topMenuEditPreferences);

        topBar.add(topMenuEdit);

        topMenuHelp.setText(greek.getString("HELP")); // NOI18N

        topMenuHelpHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.ALT_MASK));
        topMenuHelpHelp.setText(greek.getString("HELP")); // NOI18N
        topMenuHelp.add(topMenuHelpHelp);

        topMenuHelpAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        topMenuHelpAbout.setText(greek.getString("ABOUT")); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, aboutF, org.jdesktop.beansbinding.ELProperty.create("${autoRequestFocus}true"), topMenuHelpAbout, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        topMenuHelpAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                topMenuHelpAboutMouseReleased(evt);
            }
        });
        topMenuHelpAbout.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
                topMenuHelpAboutMenuKeyReleased(evt);
            }
        });
        topMenuHelp.add(topMenuHelpAbout);

        topBar.add(topMenuHelp);

        setJMenuBar(topBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(simulatorsCtrlP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(propertiesP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(dSCtrlP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(tSCtrlP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pSCtrlP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(wSCtrlP, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                .addGap(6, 6, 6))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)))
                    .addComponent(executionP, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(executionP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(propertiesP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tSCtrlP, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(dSCtrlP, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(wSCtrlP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(pSCtrlP, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(simulatorsCtrlP, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                .addContainerGap())
        );

        executionP.getAccessibleContext().setAccessibleName("");

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void topMenuHelpAboutMenuKeyReleased(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_topMenuHelpAboutMenuKeyReleased
        aboutF.setVisible( true );
    }//GEN-LAST:event_topMenuHelpAboutMenuKeyReleased

    private void topMenuHelpAboutMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topMenuHelpAboutMouseReleased
        aboutF.setVisible( true );
    }//GEN-LAST:event_topMenuHelpAboutMouseReleased

    private void powerOn_wSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_powerOn_wSMouseClicked

    }//GEN-LAST:event_powerOn_wSMouseClicked

    private void powerOn_pSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_powerOn_pSMouseClicked
        
    }//GEN-LAST:event_powerOn_pSMouseClicked

    private void powerOn_tSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_powerOn_tSMouseClicked
        
    }//GEN-LAST:event_powerOn_tSMouseClicked

    private void powerOn_dSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_powerOn_dSMouseClicked
        System.out.println( dS.initializeCommunicationController() );
        System.out.println( dS.initializeActuatorsController() );
        System.out.println( dS.initializeSensorsController() );
                
    }//GEN-LAST:event_powerOn_dSMouseClicked

    private void addRejectedWorkpiece_dSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addRejectedWorkpiece_dSMouseClicked
        
    }//GEN-LAST:event_addRejectedWorkpiece_dSMouseClicked

    private void addAcceptedWorkpiece_dSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAcceptedWorkpiece_dSMouseClicked
        
    }//GEN-LAST:event_addAcceptedWorkpiece_dSMouseClicked

    private void removeBlackWorkpiece_wSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeBlackWorkpiece_wSMouseClicked
       
    }//GEN-LAST:event_removeBlackWorkpiece_wSMouseClicked

    private void removeColoredWorkpiece_wSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeColoredWorkpiece_wSMouseClicked
       
    }//GEN-LAST:event_removeColoredWorkpiece_wSMouseClicked

    private void removeRejectedWorkpiece_wSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeRejectedWorkpiece_wSMouseClicked
        
    }//GEN-LAST:event_removeRejectedWorkpiece_wSMouseClicked

    private void removeRejectedWorkpiece_tSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeRejectedWorkpiece_tSMouseClicked
       
    }//GEN-LAST:event_removeRejectedWorkpiece_tSMouseClicked

    private void executionPAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_executionPAncestorResized

        FestoMPSTest.resizeCanvas(this);     }//GEN-LAST:event_executionPAncestorResized

    private void topMenuEditPreferencesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topMenuEditPreferencesMouseReleased

        sensorsIPField_dS.setText( FestoMPSTest.sensorsControllerIP[0] );
        sensorsPortField_dS.setText( String.valueOf( FestoMPSTest.ports[0][0] ) );
        actuatorsPortField_dS.setText( String.valueOf( FestoMPSTest.ports[0][1] ) );
        communicationPortField_dS.setText( String.valueOf( FestoMPSTest.ports[0][2] ) );
        
        sensorsIPField_tS.setText( FestoMPSTest.sensorsControllerIP[1] );
        sensorsPortField_tS.setText( String.valueOf( FestoMPSTest.ports[1][0] ) );
        actuatorsPortField_tS.setText( String.valueOf( FestoMPSTest.ports[1][1] ) );
        communicationPortField_tS.setText( String.valueOf( FestoMPSTest.ports[1][2] ) );
        
        sensorsIPField_pS.setText( FestoMPSTest.sensorsControllerIP[2] );
        sensorsPortField_pS.setText( String.valueOf( FestoMPSTest.ports[2][0] ) );
        actuatorsPortField_pS.setText( String.valueOf( FestoMPSTest.ports[2][1] ) );
        communicationPortField_pS.setText( String.valueOf( FestoMPSTest.ports[2][2] ) );
        
        sensorsIPField_wS.setText( FestoMPSTest.sensorsControllerIP[3] );
        sensorsPortField_wS.setText( String.valueOf( FestoMPSTest.ports[3][0] ) );
        actuatorsPortField_wS.setText( String.valueOf( FestoMPSTest.ports[3][1] ) );
        communicationPortField_wS.setText( String.valueOf( FestoMPSTest.ports[3][2] ) );
        
        actuatorsColorButton.setBackground( FestoMPS3D.AppearanceAttributes.getActuatorColor() );
        sensorsColorButton.setBackground( FestoMPS3D.AppearanceAttributes.getSensorColor() );
        bodyColorButton.setBackground( FestoMPS3D.AppearanceAttributes.getBodyColor() );
        structureColorButton.setBackground( FestoMPS3D.AppearanceAttributes.getStructureColor() );
        
        connectionsP.setVisible( true );
        appearanceP.setVisible( false );
        preferencesFrame.setVisible( true );
        this.setEnabled( false );
    }//GEN-LAST:event_topMenuEditPreferencesMouseReleased

    private void preferencesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_preferencesListValueChanged
        switch( preferencesList.getSelectedValue().toString() ) {
            case "Connections":
                connectionsP.setVisible( true );
                appearanceP.setVisible( false );
                break;
            case "Appearance":
                appearanceP.setVisible( true );
                connectionsP.setVisible( false );
                break;
        }
    }//GEN-LAST:event_preferencesListValueChanged

    private void preferencesFrameCancelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_preferencesFrameCancelMouseReleased
        preferencesFrameCancel();
    }//GEN-LAST:event_preferencesFrameCancelMouseReleased

    private void preferencesFrameSaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_preferencesFrameSaveMouseReleased
        
        String[] sensorsIPField = new String[4];
        String[][] portsField = new String[4][3];
        Color[] colorsField = new Color[4];
        
        sensorsIPField[0] = sensorsIPField_dS.getText();
        portsField[0][0] = sensorsPortField_dS.getText();
        portsField[0][1] = actuatorsPortField_dS.getText();
        portsField[0][2] = communicationPortField_dS.getText();
        
        sensorsIPField[1] = sensorsIPField_tS.getText();
        portsField[1][0] = sensorsPortField_tS.getText();
        portsField[1][1] = actuatorsPortField_tS.getText();
        portsField[1][2] = communicationPortField_tS.getText();
        
        sensorsIPField[2] = sensorsIPField_pS.getText();
        portsField[2][0] = sensorsPortField_pS.getText();
        portsField[2][1] = actuatorsPortField_pS.getText();
        portsField[2][2] = communicationPortField_pS.getText();
        
        sensorsIPField[3] = sensorsIPField_wS.getText();
        portsField[3][0] = sensorsPortField_wS.getText();
        portsField[3][1] = actuatorsPortField_wS.getText();
        portsField[3][2] = communicationPortField_wS.getText();
        
        colorsField[0] = actuatorsColorButton.getBackground();
        colorsField[1] = sensorsColorButton.getBackground();
        colorsField[2] = bodyColorButton.getBackground();
        colorsField[3] = structureColorButton.getBackground();
                
        FestoMPSTest.savePreferencesXML( sensorsIPField, portsField, colorsField );
        this.setEnabled( true );
        preferencesFrame.setVisible( false );
    }//GEN-LAST:event_preferencesFrameSaveMouseReleased

    private void topMenuFileCloseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topMenuFileCloseMouseReleased
        System.exit( 0 );
    }//GEN-LAST:event_topMenuFileCloseMouseReleased

    private void actuatorsColorButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actuatorsColorButtonMouseReleased
        
        Color color = JColorChooser.showDialog( this, "Choose actuator's color", FestoMPS3D.AppearanceAttributes.getActuatorColor() );
        
        if( color !=null )
            ( (javax.swing.JButton) evt.getSource()).setBackground( color );
    }//GEN-LAST:event_actuatorsColorButtonMouseReleased

    private void sensorsColorButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sensorsColorButtonMouseReleased
        
        Color color = JColorChooser.showDialog( this, "Choose actuator's color", FestoMPS3D.AppearanceAttributes.getSensorColor() );
        
        if( color !=null )
            ( (javax.swing.JButton) evt.getSource()).setBackground( color );
    }//GEN-LAST:event_sensorsColorButtonMouseReleased

    private void bodyColorButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bodyColorButtonMouseReleased
        
        Color color = JColorChooser.showDialog( this, "Choose actuator's color", FestoMPS3D.AppearanceAttributes.getBodyColor() );
        
        if( color !=null )
            ( (javax.swing.JButton) evt.getSource()).setBackground( color );
    }//GEN-LAST:event_bodyColorButtonMouseReleased

    private void structureColorButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_structureColorButtonMouseReleased
        
        Color color = JColorChooser.showDialog( this, "Choose actuator's color", FestoMPS3D.AppearanceAttributes.getStructureColor() );
        
        if( color !=null )
            ( (javax.swing.JButton) evt.getSource()).setBackground( color );
    }//GEN-LAST:event_structureColorButtonMouseReleased

    private void preferencesFrameWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_preferencesFrameWindowClosing
        preferencesFrameCancel();
    }//GEN-LAST:event_preferencesFrameWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog aboutF;
    private javax.swing.JLabel aboutLabel;
    private javax.swing.JButton actuatorsColorButton;
    private javax.swing.JFormattedTextField actuatorsPortField_dS;
    private javax.swing.JFormattedTextField actuatorsPortField_pS;
    private javax.swing.JFormattedTextField actuatorsPortField_tS;
    private javax.swing.JFormattedTextField actuatorsPortField_wS;
    private javax.swing.JLabel actuatorsPortLabel_dS;
    private javax.swing.JLabel actuatorsPortLabel_pS;
    private javax.swing.JLabel actuatorsPortLabel_tS;
    private javax.swing.JLabel actuatorsPortLabel_wS;
    private javax.swing.JLabel actuatrosColorLabel;
    private javax.swing.JButton addAcceptedWorkpiece_dS;
    private javax.swing.JButton addRejectedWorkpiece_dS;
    private javax.swing.JPanel appearanceP;
    private javax.swing.JButton bodyColorButton;
    private javax.swing.JFormattedTextField communicationPortField_dS;
    private javax.swing.JFormattedTextField communicationPortField_pS;
    private javax.swing.JFormattedTextField communicationPortField_tS;
    private javax.swing.JFormattedTextField communicationPortField_wS;
    private javax.swing.JLabel communicationPortLabel_dS;
    private javax.swing.JLabel communicationPortLabel_pS;
    private javax.swing.JLabel communicationPortLabel_tS;
    private javax.swing.JLabel communicationPortLabel_wS;
    private javax.swing.JPanel connectionsP;
    private javax.swing.JPanel dSCtrlP;
    private javax.swing.JTextArea dSInfo;
    private javax.swing.JPanel executionP;
    private javax.swing.JTextField infoBarPreferences;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JPanel pSCtrlP;
    private javax.swing.JTextArea pSInfo;
    private javax.swing.JButton powerOn_System;
    private javax.swing.JButton powerOn_dS;
    private javax.swing.JButton powerOn_pS;
    private javax.swing.JButton powerOn_tS;
    private javax.swing.JButton powerOn_wS;
    private javax.swing.JFrame preferencesFrame;
    private javax.swing.JButton preferencesFrameCancel;
    private javax.swing.JButton preferencesFrameSave;
    private javax.swing.JList preferencesList;
    private javax.swing.JPanel propertiesP;
    private javax.swing.JButton removeBlackWorkpiece_wS;
    private javax.swing.JButton removeColoredWorkpiece_wS;
    private javax.swing.JButton removeRejectedWorkpiece_tS;
    private javax.swing.JButton removeRejectedWorkpiece_wS;
    private javax.swing.JButton sensorsColorButton;
    private javax.swing.JFormattedTextField sensorsIPField_dS;
    private javax.swing.JFormattedTextField sensorsIPField_pS;
    private javax.swing.JFormattedTextField sensorsIPField_tS;
    private javax.swing.JFormattedTextField sensorsIPField_wS;
    private javax.swing.JLabel sensorsIPLabel_dS;
    private javax.swing.JLabel sensorsIPLabel_pS;
    private javax.swing.JLabel sensorsIPLabel_tS;
    private javax.swing.JLabel sensorsIPLabel_wS;
    private javax.swing.JFormattedTextField sensorsPortField_dS;
    private javax.swing.JFormattedTextField sensorsPortField_pS;
    private javax.swing.JFormattedTextField sensorsPortField_tS;
    private javax.swing.JFormattedTextField sensorsPortField_wS;
    private javax.swing.JLabel sensorsPortLabel_dS;
    private javax.swing.JLabel sensorsPortLabel_pS;
    private javax.swing.JLabel sensorsPortLabel_tS;
    private javax.swing.JLabel sensorsPortLabel_wS;
    private javax.swing.JPanel simulatorsCtrlP;
    private javax.swing.JRadioButton startStopLed_dS;
    private javax.swing.JRadioButton startStopLed_pS;
    private javax.swing.JRadioButton startStopLed_tS;
    private javax.swing.JRadioButton startStopLed_wS;
    private javax.swing.JButton structureColorButton;
    private javax.swing.JPanel tSCtrlP;
    private javax.swing.JTextArea tSInfo;
    private javax.swing.JMenuBar topBar;
    private javax.swing.JMenu topMenuEdit;
    private javax.swing.JMenuItem topMenuEditPreferences;
    private javax.swing.JMenu topMenuFile;
    private javax.swing.JMenuItem topMenuFileClose;
    private javax.swing.JMenu topMenuHelp;
    private javax.swing.JMenuItem topMenuHelpAbout;
    private javax.swing.JMenuItem topMenuHelpHelp;
    private javax.swing.JPanel wSCtrlP;
    private javax.swing.JTextArea wSInfo;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    /*
     * Στο σημείο αυτό τοποθετούνται οι custom συναρτήσεις που χρησιμοποιούμε
     */
    private void setUpPortFields() {
        
        sensorsPortField_dS.setFormatterFactory( getPortNumberFormat() );
        sensorsPortField_pS.setFormatterFactory( getPortNumberFormat() );
        sensorsPortField_tS.setFormatterFactory( getPortNumberFormat() );
        sensorsPortField_wS.setFormatterFactory( getPortNumberFormat() );
        
        communicationPortField_dS.setFormatterFactory( getPortNumberFormat() );
        communicationPortField_pS.setFormatterFactory( getPortNumberFormat() );
        communicationPortField_tS.setFormatterFactory( getPortNumberFormat() );
        communicationPortField_wS.setFormatterFactory( getPortNumberFormat() );
        
        actuatorsPortField_dS.setFormatterFactory( getPortNumberFormat() );
        actuatorsPortField_pS.setFormatterFactory( getPortNumberFormat() );
        actuatorsPortField_tS.setFormatterFactory( getPortNumberFormat() );
        actuatorsPortField_wS.setFormatterFactory( getPortNumberFormat() );
    }
    
    private void setUpIPFields() {
        
        sensorsIPField_dS.setFormatterFactory( getIPNumberFormat() );
        sensorsIPField_tS.setFormatterFactory( getIPNumberFormat() );
        sensorsIPField_pS.setFormatterFactory( getIPNumberFormat() );
        sensorsIPField_wS.setFormatterFactory( getIPNumberFormat() );
    }
    
    private AbstractFormatterFactory getPortNumberFormat() {
        
        return new DefaultFormatterFactory( new PatternFormatter( Pattern.compile( "([0-5]?\\d?\\d?\\d?[1-9]|6[0-5][0-5][0-3][0-5])" ) ) );
    }
    
    private AbstractFormatterFactory getIPNumberFormat() {
        
        return new DefaultFormatterFactory( new PatternFormatter( Pattern.compile( "^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                                                                                + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                                                                                + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                                                                                + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])$" ) ) );
    }
    
    private void preferencesFrameCancel() {
        
        this.setEnabled( true );
        preferencesFrame.setVisible( false );
    }
    
    public int getExecutionWidth() {
        
        return executionP.getWidth();
    }
    
    public int getExecutionHeight() {
        
        return executionP.getHeight();
    }
    
    public javax.swing.JPanel getExecutionP() {
        
        return executionP;
    }
    
    public void addExecutionP( java.awt.Canvas comp ) {
            
        executionP.add( comp, java.awt.BorderLayout.CENTER );
    }
    
    public void setDS( DistributionStation dS ) {
        
        this.dS = dS;
    }
    
}
